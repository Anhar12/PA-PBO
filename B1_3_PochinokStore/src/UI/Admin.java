/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Database.MyDatabase;
import Project.Main;
import Project.VariasiTopUp;

import javax.swing.table.*;
import javax.swing.*;
import java.util.ArrayList;
import Interface.UserInterface;
/**
 *
 * @author ACER
 */

public class Admin extends javax.swing.JFrame implements UserInterface{

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        parentPanel = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        btnLogout = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnManage = new javax.swing.JButton();
        btnHistory = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        HomePanel = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        TableSearch = new javax.swing.JTable();
        ManagePanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableVarian = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableGame = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtGame = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        btnAddGame = new javax.swing.JButton();
        btnUpdateGame = new javax.swing.JButton();
        btnDeleteGame = new javax.swing.JButton();
        btnClearGame = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtJumlah = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtmataUang = new javax.swing.JTextField();
        btnAddVarian = new javax.swing.JButton();
        btnUpdateVarian = new javax.swing.JButton();
        btnDeleteVarian = new javax.swing.JButton();
        btnClear2 = new javax.swing.JButton();
        cbGame = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        HistoryPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTransaksi = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        parentPanel.setBackground(new java.awt.Color(158, 71, 132));
        parentPanel.setOpaque(false);

        menuPanel.setBackground(new java.awt.Color(158, 71, 132));
        menuPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        menuPanel.setOpaque(false);

        btnLogout.setBackground(new java.awt.Color(102, 0, 0));
        btnLogout.setFont(new java.awt.Font("Futura Md BT", 1, 14)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnLogout.setText("LOGOUT");
        btnLogout.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnHome.setBackground(new java.awt.Color(102, 52, 127));
        btnHome.setFont(new java.awt.Font("Futura Md BT", 1, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setText("HOME");
        btnHome.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnManage.setBackground(new java.awt.Color(102, 52, 127));
        btnManage.setFont(new java.awt.Font("Futura Md BT", 1, 14)); // NOI18N
        btnManage.setForeground(new java.awt.Color(255, 255, 255));
        btnManage.setText("MANAGE");
        btnManage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnManage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageActionPerformed(evt);
            }
        });

        btnHistory.setBackground(new java.awt.Color(102, 52, 127));
        btnHistory.setFont(new java.awt.Font("Futura Md BT", 1, 14)); // NOI18N
        btnHistory.setForeground(new java.awt.Color(255, 255, 255));
        btnHistory.setText("HISTORY");
        btnHistory.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnHistory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistoryActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Futura Md BT", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(235, 176, 45));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("POCHINOK");
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 100));

        jLabel7.setFont(new java.awt.Font("Futura Md BT", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(235, 176, 45));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("STORE");
        jLabel7.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnManage, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnManage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        mainPanel.setBackground(new java.awt.Color(158, 71, 132));
        mainPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        mainPanel.setFont(new java.awt.Font("Futura Md BT", 0, 12)); // NOI18N
        mainPanel.setOpaque(false);
        mainPanel.setLayout(new java.awt.CardLayout());

        HomePanel.setBackground(new java.awt.Color(158, 71, 132));
        HomePanel.setOpaque(false);

        txtSearch.setBackground(new java.awt.Color(255, 205, 56));
        txtSearch.setFont(new java.awt.Font("Futura Md BT", 1, 16)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Futura Md BT", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Home Page Admin Pochinok Store");

        TableSearch.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        TableSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.", "Game", "Jumlah", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableSearch.setRowHeight(22);
        jScrollPane5.setViewportView(TableSearch);
        if (TableSearch.getColumnModel().getColumnCount() > 0) {
            TableSearch.getColumnModel().getColumn(0).setResizable(false);
            TableSearch.getColumnModel().getColumn(0).setPreferredWidth(1);
            TableSearch.getColumnModel().getColumn(1).setResizable(false);
            TableSearch.getColumnModel().getColumn(2).setResizable(false);
            TableSearch.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel6))
                    .addGroup(HomePanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSearch)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel6)
                .addGap(32, 32, 32)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        mainPanel.add(HomePanel, "card4");

        ManagePanel.setBackground(new java.awt.Color(158, 71, 132));
        ManagePanel.setOpaque(false);

        TableVarian.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TableVarian.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        TableVarian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Jumlah", "Harga"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableVarian.setGridColor(new java.awt.Color(0, 0, 0));
        TableVarian.setRowHeight(22);
        TableVarian.getTableHeader().setReorderingAllowed(false);
        TableVarian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableVarianMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableVarian);
        TableVarian.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (TableVarian.getColumnModel().getColumnCount() > 0) {
            TableVarian.getColumnModel().getColumn(0).setResizable(false);
            TableVarian.getColumnModel().getColumn(0).setPreferredWidth(1);
            TableVarian.getColumnModel().getColumn(1).setResizable(false);
            TableVarian.getColumnModel().getColumn(2).setResizable(false);
        }

        TableGame.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TableGame.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        TableGame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Game", "Mata Uang"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableGame.setGridColor(new java.awt.Color(0, 0, 0));
        TableGame.setRowHeight(22);
        TableGame.getTableHeader().setReorderingAllowed(false);
        TableGame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableGameMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TableGame);
        if (TableGame.getColumnModel().getColumnCount() > 0) {
            TableGame.getColumnModel().getColumn(0).setResizable(false);
            TableGame.getColumnModel().getColumn(0).setPreferredWidth(5);
            TableGame.getColumnModel().getColumn(1).setResizable(false);
            TableGame.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel8.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Mata Uang game");

        jLabel10.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Nama Game");

        txtGame.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N

        txtHarga.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N

        btnAddGame.setBackground(new java.awt.Color(235, 176, 45));
        btnAddGame.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        btnAddGame.setForeground(new java.awt.Color(102, 52, 127));
        btnAddGame.setText("Add");
        btnAddGame.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddGameActionPerformed(evt);
            }
        });

        btnUpdateGame.setBackground(new java.awt.Color(235, 176, 45));
        btnUpdateGame.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        btnUpdateGame.setForeground(new java.awt.Color(102, 52, 127));
        btnUpdateGame.setText("Update");
        btnUpdateGame.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateGameActionPerformed(evt);
            }
        });

        btnDeleteGame.setBackground(new java.awt.Color(235, 176, 45));
        btnDeleteGame.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        btnDeleteGame.setForeground(new java.awt.Color(102, 52, 127));
        btnDeleteGame.setText("Delete");
        btnDeleteGame.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteGameActionPerformed(evt);
            }
        });

        btnClearGame.setBackground(new java.awt.Color(235, 176, 45));
        btnClearGame.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        btnClearGame.setForeground(new java.awt.Color(102, 52, 127));
        btnClearGame.setText("Clear");
        btnClearGame.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClearGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClearGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearGameActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Jumlah");

        txtJumlah.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Harga");

        txtmataUang.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N

        btnAddVarian.setBackground(new java.awt.Color(235, 176, 45));
        btnAddVarian.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        btnAddVarian.setForeground(new java.awt.Color(102, 52, 127));
        btnAddVarian.setText("Add");
        btnAddVarian.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddVarian.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAddVarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVarianActionPerformed(evt);
            }
        });

        btnUpdateVarian.setBackground(new java.awt.Color(235, 176, 45));
        btnUpdateVarian.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        btnUpdateVarian.setForeground(new java.awt.Color(102, 52, 127));
        btnUpdateVarian.setText("Update");
        btnUpdateVarian.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateVarian.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateVarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateVarianActionPerformed(evt);
            }
        });

        btnDeleteVarian.setBackground(new java.awt.Color(235, 176, 45));
        btnDeleteVarian.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        btnDeleteVarian.setForeground(new java.awt.Color(102, 52, 127));
        btnDeleteVarian.setText("Delete");
        btnDeleteVarian.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDeleteVarian.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleteVarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteVarianActionPerformed(evt);
            }
        });

        btnClear2.setBackground(new java.awt.Color(235, 176, 45));
        btnClear2.setFont(new java.awt.Font("Futura Md BT", 1, 12)); // NOI18N
        btnClear2.setForeground(new java.awt.Color(102, 52, 127));
        btnClear2.setText("Clear");
        btnClear2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClear2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClear2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear2ActionPerformed(evt);
            }
        });

        cbGame.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N
        cbGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGameActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Futura Md BT", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Nama Game");

        jLabel14.setFont(new java.awt.Font("Futura Md BT", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Data Game Top Up");

        jLabel15.setFont(new java.awt.Font("Futura Md BT", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Data Varian Top Up");

        javax.swing.GroupLayout ManagePanelLayout = new javax.swing.GroupLayout(ManagePanel);
        ManagePanel.setLayout(ManagePanelLayout);
        ManagePanelLayout.setHorizontalGroup(
            ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManagePanelLayout.createSequentialGroup()
                .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addGroup(ManagePanelLayout.createSequentialGroup()
                                .addComponent(btnAddGame, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdateGame, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteGame, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnClearGame, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtmataUang)
                            .addComponent(txtGame)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                        .addGap(5, 27, Short.MAX_VALUE)
                        .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHarga, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                                .addComponent(btnAddVarian, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                                        .addGap(168, 168, 168)
                                        .addComponent(btnClear2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ManagePanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdateVarian, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDeleteVarian, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                                .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addGap(7, 7, 7)
                                .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtJumlah)
                                    .addComponent(cbGame, 0, 190, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(110, 110, 110))))
        );
        ManagePanelLayout.setVerticalGroup(
            ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(ManagePanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGame, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtmataUang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnAddGame, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnUpdateGame, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnDeleteGame, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnClearGame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManagePanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(24, 24, 24)
                        .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(ManagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddVarian, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateVarian, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDeleteVarian, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClear2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ManagePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16))
        );

        mainPanel.add(ManagePanel, "card2");

        HistoryPanel.setBackground(new java.awt.Color(158, 71, 132));
        HistoryPanel.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Futura Md BT", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Data Riwayat Transaksi Top Up");

        tableTransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No.", "Game", "ID Akun", "Nickname", "Jumlah", "Harga", "Tanggal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableTransaksi);
        if (tableTransaksi.getColumnModel().getColumnCount() > 0) {
            tableTransaksi.getColumnModel().getColumn(0).setResizable(false);
            tableTransaksi.getColumnModel().getColumn(0).setPreferredWidth(1);
            tableTransaksi.getColumnModel().getColumn(1).setResizable(false);
            tableTransaksi.getColumnModel().getColumn(2).setResizable(false);
            tableTransaksi.getColumnModel().getColumn(3).setResizable(false);
            tableTransaksi.getColumnModel().getColumn(4).setResizable(false);
            tableTransaksi.getColumnModel().getColumn(5).setResizable(false);
            tableTransaksi.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout HistoryPanelLayout = new javax.swing.GroupLayout(HistoryPanel);
        HistoryPanel.setLayout(HistoryPanelLayout);
        HistoryPanelLayout.setHorizontalGroup(
            HistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(HistoryPanelLayout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HistoryPanelLayout.setVerticalGroup(
            HistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HistoryPanelLayout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        mainPanel.add(HistoryPanel, "card3");

        javax.swing.GroupLayout parentPanelLayout = new javax.swing.GroupLayout(parentPanel);
        parentPanel.setLayout(parentPanelLayout);
        parentPanelLayout.setHorizontalGroup(
            parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parentPanelLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        parentPanelLayout.setVerticalGroup(
            parentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(parentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 55, 860, 450));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UI/bg baru.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
//    override dan overloading
    @Override
    public void display(){
        MyDatabase.read_game();
//        atur kolom header
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("Game");
        model.addColumn("Mata Uang");
        
//        remove all items di combobox
        cbGame.removeAllItems();
        cbGame.addItem(" ");
        
//        ambil semua data dari arraylist ke tabel
        for (int i = 0 ; i < Main.dataGame.size() ; i++){
            model.addRow(new Object[] {(i+1), Main.dataGame.get(i).getGame(), Main.dataGame.get(i).getMataUang()});
            cbGame.addItem(Main.dataGame.get(i).getGame());
        }
        
//        set model dan atur lebar kolom
        TableGame.setModel(model);
        TableGame.getColumnModel().getColumn(0).setPreferredWidth(1);
        TableGame.getColumnModel().getColumn(1).setPreferredWidth(100);
        TableGame.getColumnModel().getColumn(2).setPreferredWidth(100);
        
//        align biar nomor ke center
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        TableColumnModel columnModel = TableGame.getColumnModel();
        for (int i = 0 ; i < 3 ;i++){
            columnModel.getColumn(i).setCellRenderer(centerRenderer);
        }
//        agar isi table tidak dapat diedit
        TableGame.setDefaultEditor(Object.class, null);
    }
    
//    override dan overloading
    @Override
    public void display(String game){
        MyDatabase.read_varian();
//        index gamenya
        int idx = Main.cari_game(game);
        
//        atur kolom header
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("Jumlah");
        model.addColumn("Harga");
        
//        kalo misalnya data ketemu, maka akan diambil data dari arraylistnya ke tabel
        if (idx != -1){
            for (int i = 0 ; i < Main.dataGame.get(idx).getVarian().size() ; i++){
                model.addRow(new Object[] {(i+1), Main.dataGame.get(idx).getVarian().get(i).get(0), Main.dataGame.get(idx).getVarian().get(i).get(1)});
            }
        }
        
//        set model dan atur lebar kolom
        TableVarian.setModel(model);
        TableVarian.getColumnModel().getColumn(0).setPreferredWidth(1);
        TableVarian.getColumnModel().getColumn(1).setPreferredWidth(100);
        TableVarian.getColumnModel().getColumn(2).setPreferredWidth(100);
        
//        align nomor to center
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        TableColumnModel columnModel = TableVarian.getColumnModel();
        for (int i = 0 ; i < 3 ;i++){
            columnModel.getColumn(i).setCellRenderer(centerRenderer);
        }
        // agar isi table tidak dapat diedit
        TableVarian.setDefaultEditor(Object.class, null);
    }
    
    public void display_transaksi(){
        
        MyDatabase.read_transaksi();
//        atur kolom header
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No.");
        model.addColumn("Game");
        model.addColumn("ID Akun");
        model.addColumn("Nickname");
        model.addColumn("Jumlah");
        model.addColumn("Harga");
        model.addColumn("Waktu");
        
//        ambil data dari arraylist ke tabel
        for (int i = 0 ; i < Main.dataPesanan.size() ; i++){
            String game = Main.dataPesanan.get(i).getGame();
            String ID = Main.dataPesanan.get(i).getID();
            String nickname = Main.dataPesanan.get(i).getNickname();
            String jumlah = String.valueOf(Main.dataPesanan.get(i).getJumlahTopUP()) + " " + Main.dataGame.get(Main.cari_game(game)).getMataUang();
            String harga = "Rp" + String.valueOf(Main.dataPesanan.get(i).getTotal());
            String waktu = Main.dataPesanan.get(i).getWaktu();
            
            model.addRow(new Object[] {(i+1), game, ID, nickname, jumlah, harga, waktu});
        }
        
//        set model dan atur lebar kolom
        tableTransaksi.setModel(model);
        tableTransaksi.getColumnModel().getColumn(0).setPreferredWidth(1);
        for (int i = 1 ; i < 6 ; i++){            
            tableTransaksi.getColumnModel().getColumn(i).setPreferredWidth(50);
        }
        
//        align nomor to center
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        TableColumnModel columnModel = tableTransaksi.getColumnModel();
        for (int i = 0 ; i < 7 ;i++){
            columnModel.getColumn(i).setCellRenderer(centerRenderer);
        }
        // agar isi table tidak dapat diedit
        tableTransaksi.setDefaultEditor(Object.class, null);
    }
    
//    clear input
    public void cls1(){
        txtGame.setText(null);
        txtmataUang.setText(null);
    }
    
    public void cls2(){
        txtJumlah.setText(null);
        txtHarga.setText(null);
    }
    
//    cek input user
    public boolean cek1(){
        if (txtGame.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Isi Nama Gamenya Dulu Masbro!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
            return false;
        } else if (txtmataUang.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Isi Mata Uang Gamenya Dulu Masbro!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    
    public boolean cek2(){
        if (cbGame.getSelectedIndex() > 0){
            if (txtJumlah.getText().equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(this, "Isi Jumlah Variannya Dulu Masbro!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
                return false;
            } else if (txtHarga.getText().equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(this, "Isi Harga Variannya Dulu Masbro!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
                return false;
            }
            int jumlah, harga;
            // cek apakah input dari user merupakan integer atau bukan
            try {
                jumlah = Integer.parseInt(txtJumlah.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Jumlah Varian Harus Bilangan Bulat Masbro!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
                return false;
            }
            // cek apakah input dari user merupakan integer atau bukan
            try {
                harga = Integer.parseInt(txtHarga.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Harga Varian Harus Bilangan Bulat Masbro!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
                return false;
            }
//            cek apakah input lebih dari nol
            if (jumlah < 1){
                JOptionPane.showMessageDialog(this, "Jumlah Varian Minimal 1 Masbro!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
                return false;
            } else if (harga < 1){
                JOptionPane.showMessageDialog(this, "Harga Varian Minimal 1 Masbro!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Belum Ada Data Game Top Up Yang Dipilih!", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }
    
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        Landingpage land = new Landingpage();
        land.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        HomePanel.setVisible(true);
        HistoryPanel.setVisible(false);
        ManagePanel.setVisible(false);
        txtSearch.setText("");
        MyDatabase.search(txtSearch.getText(), 1);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageActionPerformed
        HomePanel.setVisible(false);
        HistoryPanel.setVisible(false);
        ManagePanel.setVisible(true);
        cls1();
        cls2();
        display();
    }//GEN-LAST:event_btnManageActionPerformed

    private void btnHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistoryActionPerformed
        HomePanel.setVisible(false);
        ManagePanel.setVisible(false);
        HistoryPanel.setVisible(true);
        display_transaksi();
    }//GEN-LAST:event_btnHistoryActionPerformed

    private void btnAddGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddGameActionPerformed
        if (cek1() == true){
//            mencegah adanya duplikat nama game
            if (Main.cari_game(txtGame.getText()) == -1){
                ArrayList<Integer> varian = new ArrayList<>();
                VariasiTopUp game_baru = new VariasiTopUp(txtGame.getText(), txtmataUang.getText(), varian);
                Main.dataGame.add(game_baru);
                
//                insert into database
                MyDatabase.insert_game(txtGame.getText(), txtmataUang.getText());
                JOptionPane.showMessageDialog(this, "Berhasil Menambahkan Data Game!", "Selamat", JOptionPane.INFORMATION_MESSAGE);

                display();
                cls1();
            } else {
                JOptionPane.showMessageDialog(this, "Data Game Tersebut Sudah Ada!", "Sekedar Mengingatkan", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddGameActionPerformed

    private void btnUpdateGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateGameActionPerformed
        int selectedRow = TableGame.getSelectedRow();
//        cek apakah sudah ada data yang dipilih
        if (selectedRow != -1){
            String update = TableGame.getValueAt(selectedRow, 1).toString();
            // biar ga duplikat nama gamenya
            if (Main.cari_game(txtGame.getText()) == -1 || update.equalsIgnoreCase(txtGame.getText())){
                Main.dataGame.get(Main.cari_game(update)).setGame(txtGame.getText());
                Main.dataGame.get(Main.cari_game(txtGame.getText())).setMataUang(txtmataUang.getText());
                
//                update ke database
                MyDatabase.update_game(update, txtGame.getText(), txtmataUang.getText());
                JOptionPane.showMessageDialog(this, "Berhasil Update Data Game!", "Selamat", JOptionPane.INFORMATION_MESSAGE);
                display();
                cls1();
            } else {
                JOptionPane.showMessageDialog(this, "Data Game Tersebut Sudah Ada!", "Sekedar Mengingatkan", JOptionPane.ERROR_MESSAGE);       
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silakan Pilih Data Yang Mau di Update Terlebih Dahulu", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateGameActionPerformed

    private void btnDeleteGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteGameActionPerformed
        int selectedRow = TableGame.getSelectedRow();
//        cek sudah ada data yang dipilih ato belum
        if (selectedRow != -1){
            String hapus = TableGame.getValueAt(selectedRow, 1).toString();
            int pilih = JOptionPane.showConfirmDialog(null, "Yakin Ingin Menghapus Data Game "+ hapus +"?", "Meyakinkan", JOptionPane.YES_NO_OPTION);
            if (pilih == JOptionPane.YES_OPTION){
                Main.dataGame.remove(Main.cari_game(hapus));
            
    //            delete from database
                MyDatabase.delete_game(hapus);
                JOptionPane.showMessageDialog(this, "Berhasil menghapus Data Game!", "Selamat", JOptionPane.INFORMATION_MESSAGE);
                display();
                cls1();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silakan Pilih Data Yang Mau di Hapus Terlebih Dahulu", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteGameActionPerformed

    private void btnClearGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearGameActionPerformed
        cls1();
    }//GEN-LAST:event_btnClearGameActionPerformed

    private void btnAddVarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVarianActionPerformed
        if (cek2() == true){
            String game = cbGame.getSelectedItem().toString();
            int idx = Main.cari_game(game);
            int jumlah = Integer.parseInt(txtJumlah.getText());
            int harga = Integer.parseInt(txtHarga.getText());
            
//            mencegah agar tidak ada varian yang duplikat dalam game tersebut
            if (Main.dataGame.get(idx).idx_variasi(jumlah) == -1){ 
                Main.dataGame.get(idx).tambah_varian(jumlah, harga);
                
//                insert into database
                MyDatabase.insert_varian(game, jumlah, harga);
                JOptionPane.showMessageDialog(this, "Berhasil Menambah Varian Top Up!", "Selamat", JOptionPane.INFORMATION_MESSAGE);
                display(game);
                cls2();
            } else {
               JOptionPane.showMessageDialog(this, "Jumlah Varian Tersebut Sudah Ada!", "Sekedar Mengingatkan", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnAddVarianActionPerformed

    private void btnUpdateVarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateVarianActionPerformed
        int selectedRow = TableVarian.getSelectedRow();
        //cek sudah ada data yang dipilih ato belum
        if (selectedRow != -1){
            if (cek2() == true){
                String game = cbGame.getSelectedItem().toString();
                int update = Integer.parseInt(TableVarian.getValueAt(selectedRow, 1).toString());
                int jumlah = Integer.parseInt(txtJumlah.getText());
                int harga = Integer.parseInt(txtHarga.getText());

                int idx = Main.cari_game(game);
                int cari_variasi = Main.dataGame.get(idx).idx_variasi(update);
//                cegah duplikasi data varian
                if (Main.dataGame.get(idx).idx_variasi(jumlah) == -1 || jumlah == update){
                    Main.dataGame.get(idx).set_topUp(jumlah, harga, cari_variasi);
                    
//                    update ke database
                    MyDatabase.update_varian(update, game, jumlah, harga);
                    JOptionPane.showMessageDialog(this, "Berhasil Update Data Varian Top Up!", "Selamat", JOptionPane.INFORMATION_MESSAGE);
                    display(game);
                    cls2();
                } else {
                    JOptionPane.showMessageDialog(this, "Jumlah Varian Tersebut Sudah Ada!", "Sekedar Mengingatkan", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silakan Pilih Data Yang Mau diUpdate Terlebih Dahulu", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateVarianActionPerformed

    private void btnDeleteVarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteVarianActionPerformed
        int selectedRow = TableVarian.getSelectedRow();
        //cek sudah ada data yang dipilih ato belum
        if (selectedRow != -1){
            String game = cbGame.getSelectedItem().toString();
            
            int pilih = JOptionPane.showConfirmDialog(null, "Yakin Ingin Menghapus Varian Top Up Game "+ game +"?", "Meyakinkan", JOptionPane.YES_NO_OPTION);
            if (pilih == JOptionPane.YES_OPTION){
                int jumlah = Integer.parseInt(TableVarian.getValueAt(selectedRow, 1).toString());
                int idx = Main.cari_game(game);
                int idx_variasi = Main.dataGame.get(idx).idx_variasi(jumlah);
                Main.dataGame.get(idx).action(jumlah, idx_variasi);

    //            delete from database
                MyDatabase.delete_varian(game, jumlah);
                JOptionPane.showMessageDialog(this, "Berhasil Hapus Data Varian Top Up!", "Selamat", JOptionPane.INFORMATION_MESSAGE);
                display(game);
                cls2();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Silakan Pilih Data Yang Mau diHapus Terlebih Dahulu", "Sekedar Mengingatkan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteVarianActionPerformed

    private void btnClear2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear2ActionPerformed
        cls2();
        cbGame.setSelectedIndex(0);
    }//GEN-LAST:event_btnClear2ActionPerformed

    private void TableGameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableGameMouseClicked
        int selectedRow = TableGame.getSelectedRow();
//        mengambil nilai dari table ke dalam Jtextfield
        txtGame.setText(TableGame.getValueAt(selectedRow, 1).toString());
        txtmataUang.setText(TableGame.getValueAt(selectedRow, 2).toString());
    }//GEN-LAST:event_TableGameMouseClicked

    private void cbGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGameActionPerformed
        if (cbGame.getItemCount() > 0){
//            apabila ada data yang dipilih pada combo box maka akan menampilkan data varian top upnya
            String game = cbGame.getSelectedItem().toString();
            display(game);
        }
    }//GEN-LAST:event_cbGameActionPerformed

    private void TableVarianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableVarianMouseClicked
        int selectedRow = TableVarian.getSelectedRow();
//        mengambil nilai dari table ke dalam Jtextfield
        txtJumlah.setText(TableVarian.getValueAt(selectedRow, 1).toString());
        txtHarga.setText(TableVarian.getValueAt(selectedRow, 2).toString());
    }//GEN-LAST:event_TableVarianMouseClicked

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        MyDatabase.search(txtSearch.getText(), 1);
    }//GEN-LAST:event_txtSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HistoryPanel;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JPanel ManagePanel;
    private javax.swing.JTable TableGame;
    public static javax.swing.JTable TableSearch;
    private javax.swing.JTable TableVarian;
    private javax.swing.JButton btnAddGame;
    private javax.swing.JButton btnAddVarian;
    private javax.swing.JButton btnClear2;
    private javax.swing.JButton btnClearGame;
    private javax.swing.JButton btnDeleteGame;
    private javax.swing.JButton btnDeleteVarian;
    private javax.swing.JButton btnHistory;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnManage;
    private javax.swing.JButton btnUpdateGame;
    private javax.swing.JButton btnUpdateVarian;
    private javax.swing.JComboBox<String> cbGame;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel parentPanel;
    private javax.swing.JTable tableTransaksi;
    private javax.swing.JTextField txtGame;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtmataUang;
    // End of variables declaration//GEN-END:variables
}
